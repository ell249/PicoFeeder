esphome:  # running 2023.6.4
  name: pico-feeder
  friendly_name: pico-feeder
  on_boot:
    - output.turn_on: sleepi
    - output.turn_on: reseti
    - output.turn_on: enable
    - output.turn_off: ms1
    - output.turn_off: ms2
    - output.turn_off: ms3
    - rtttl.play: 'MissionImp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f,32f#'

rp2040:
  board: rpipicow
  framework:
    # Required until https://github.com/platformio/platform-raspberrypi/pull/36 is merged
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "pico-feeder"
    password: !secret ap_password

output:
  - platform: rp2040_pwm
    pin: 2
    id: rtttl_out
  - platform: gpio
    pin: 8
    id: enable
  - platform: gpio
    pin: 9
    id: ms1
  - platform: gpio
    pin: 10
    id: ms2
  - platform: gpio
    pin: 11
    id: ms3
  - platform: gpio
    pin: 12
    id: sleepi
  - platform: gpio
    pin: 3
    id: reseti

rtttl:
  output: rtttl_out
  
globals:
  - id: Feed_Amount
    type: float
    restore_value: true
    initial_value: '600.0' 

i2c:
  sda: 4
  scl: 5
  scan: true
  id: bus_a

sensor:
  - platform: vl53l0x
    name: "Food Level"
    id: level1
    address: 0x29
    timeout: 200us
    update_interval: 1min
    unit_of_measurement: "%"
    filters:
      - calibrate_linear:
          # Map 220 (from sensor) to 0% (true value) 
          # full is 25 to 100% (true value) 
          - 0.220 -> 0
          - 0.025 -> 100
  - platform: uptime
    name: Uptime Sensor


stepper:
  - platform: a4988
    id: feed_stepper
    step_pin: 6
    dir_pin: 7
    max_speed: 200 steps/s
    sleep_pin: 
      number: 8
      inverted: True
    acceleration: inf
    deceleration: inf
    
button:
  - platform: template
    name: "Feed Now"
    id: Feed_Now
    icon: mdi:radiobox-marked
    on_press:
      then:
        - logger.log:
            format: "Feeding now amount %f steps"
            args: [ 'id(Feed_Amount)']
        - switch.turn_off:
            id: Hungry_Dog
        - stepper.report_position:
            id: feed_stepper
            position: 0
        - stepper.set_target:
            id: feed_stepper
            target: !lambda 'return int(id(Feed_Amount));'
            # target: 600
        - rtttl.play: 'MissionImp:d=16,o=6,b=95:32d,32d#,32d,32d#,32d,32d#,32d,32d#,32d,32d,32d#,32e,32f'

number:
  - platform: template
    icon: mdi:food-hot-dog
    id: Feed_Amount_Setting
    name: "Feed Amount Setting"
    min_value: 100
    max_value: 1800
    initial_value: 600.0
    step: 1
    set_action:
      then:
       - lambda: id(Feed_Amount) = x;
       - logger.log:
          format: "New feeding amount is %f steps"
          args: [ 'id(Feed_Amount)']
       
switch:
  - platform: gpio
    pin: 13
    name: "Hungry Dog Light"
    id: Hungry_Dog
    icon: mdi:dog
    restore_mode: RESTORE_DEFAULT_ON

binary_sensor:
  - platform: gpio
    pin:
      number: 14
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Feed Button"
    on_press:
      then:
        - button.press: Feed_Now

    